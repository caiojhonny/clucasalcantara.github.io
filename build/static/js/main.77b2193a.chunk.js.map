{"version":3,"sources":["components/molecules/footer/index.js","components/atoms/title/index.js","components/atoms/link/index.js","components/atoms/nav-item/index.js","components/molecules/navigation/index.js","components/molecules/header/index.js","components/molecules/loadable/index.js","components/layout/page/index.js","routes/index.js","pages/home/index.js","services/pwa/serviceWorker.js","store/create-context.js","store/index.js","index.js"],"names":["Footer","styled","footer","width","padding","display","justifyContent","bottom","position","H4","h4","textTransform","_ref","title","react_default","a","createElement","Title","div","color","SubTitle","_ref2","fontSize","fontWeight","atoms_title","_ref3","content","subtitle","subtitleColor","className","propTypes","PropTypes","string","Link","textDecoration","atoms_link","text","href","NavItem","li","listStyle","nav_item","path","Navigation","Items","ul","navigation","navItems","map","key","Header","alignItems","header","colors","theme","main","blue","array","object","defaultProps","Loadable","children","loadingContent","react","fallback","Page","flex","fontFamily","page","childrenWithInjectedTheme","React","Children","child","cloneElement","routes","exact","component","_ref$baseContext","baseContext","config","nav","isLocalhost","Boolean","window","location","hostname","match","register","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","overrideContext","initialState","name","fonts","default","gray","white","createContext","Object","objectSpread","ReactDOM","render","BrowserRouter","renderRoutes","Provider","Consumer","_currentValue","document","getElementById"],"mappings":"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","file":"static/js/main.77b2193a.chunk.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Footer = styled.footer({\n  width: '100%',\n  padding: '1rem',\n  display: 'flex',\n  justifyContent: 'space-around',\n  bottom: 0,\n  position: 'fixed'\n})\n\nconst H4 = styled.h4({\n  textTransform: 'uppercase'\n})\n\nexport default ({ title }) => (\n  <Footer>\n      <H4>{title}</H4>\n      <p>Â© 2019 Todos os direitos reservados.</p>\n  </Footer>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nconst Title = styled.div(({ color }) => ({\n  padding: '1rem',\n  justifyContent: 'center',\n  textTransform: 'uppercase',\n  color: color || 'black'\n}))\n\nconst SubTitle = styled.div(({ color }) => ({\n  fontSize: '.8rem',\n  fontWeight: 300,\n  color: color || 'blue'\n}))\n\nexport default ({ content, subtitle, color, subtitleColor }) => (\n  <Title color={color}>\n    <div className=\"content\">{content}</div>\n    {subtitle && <SubTitle color={subtitleColor}>{subtitle}</SubTitle>}\n  </Title>\n)\n\nTitle.propTypes = {\n  content: PropTypes.string,\n  subtitle: PropTypes.string,\n  color: PropTypes.string,\n  subtitleColor: PropTypes.string\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Link = styled.a({\n    textDecoration: 'none',\n    color: 'black'\n})\n\nexport default ({ text, href }) => (\n    <Link href={href}>\n        {text}\n    </Link>\n)","import React from 'react'\nimport styled from '@emotion/styled'\n\n// UI Elements\nimport Link from '../link'\n\nconst NavItem = styled.li({\n    padding: '.5rem',\n    listStyle: 'none',\n})\n\nexport default ({ text, path }) => (\n  <NavItem>\n    <Link href={path} text={text} />    \n  </NavItem>\n)","import React from 'react'\nimport styled from '@emotion/styled'\n// UI Elements\nimport { NavItem } from 'components/atoms'\n\nconst Navigation = styled.div({\n    padding: '.5rem',\n})\n\nconst Items = styled.ul({\n    display: 'flex',\n    padding: '1rem',\n})\n\nexport default ({ navItems }) => (\n    <Navigation>\n        <Items>\n            {navItems.map(({ text, path }) =>\n                <NavItem key={path} text={text} path={path} />\n            )}\n        </Items>\n    </Navigation>\n)","import React from 'react'\nimport { array, object, string } from 'prop-types'\nimport styled from '@emotion/styled'\n// UI Elements\nimport { Title } from '../../atoms'\nimport Navigation from '../navigation'\n\nconst Header = styled.div({\n  textTransform: 'uppercase',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n})\n\nexport default ({ navItems, title, subtitle, theme: { colors } }) => (\n  <Header>\n    <Title\n      content={title}\n      subtitle={subtitle}\n      color={colors.main}\n      subtitleColor={colors.blue}\n    />\n    <Navigation navItems={navItems} />\n  </Header>\n)\n\nHeader.propTypes = {\n  navItems: array,\n  title: string,\n  subtitle: string,\n  theme: object\n}\n\nHeader.defaultProps = {\n  navItems: []\n}\n","import React, { Suspense } from 'react'\nimport { oneOfType, element, array } from 'prop-types'\n\nconst Loadable = ({ children, loadingContent }) => (\n    <Suspense fallback={loadingContent}>{children}</Suspense>\n)\n\nLoadable.propTypes = {\n    loadingContent: element,\n    children: oneOfType([element, array]).isRequired\n}\n\nLoadable.defaultProps = {\n    loadingContent: <div>Loading...</div>\n}\n\nexport default Loadable\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Page = styled.div({\n    flex: 1, \n    padding: '1rem',\n    fontFamily: 'Quicksand',\n})\n\nexport default ({ children, theme }) => {\n    const childrenWithInjectedTheme = React.Children.map(children, child => child ?\n        React.cloneElement(child, {\n            theme\n        }) : null\n    );\n    \n    return (\n        <Page>\n            {childrenWithInjectedTheme}\n        </Page>\n    )\n}","import { Home } from 'pages'\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    component: Home\n  }\n]\n\nexport default routes\n","import React from 'react'\n// UI Elements\nimport { Header, Footer } from 'components/molecules'\nimport { Page } from 'components/layout'\n\nconst Home = ({ baseContext: { config, theme } }) => (\n  <Page theme={theme}>\n    <Header\n      title={config.title}\n      subtitle={config.subtitle}\n      navItems={config.nav}\n    />\n    <Footer title={config.title} />\n  </Page>\n)\n\nexport default Home\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { createContext } from 'react'\nimport { initialState } from '.'\n\nexport default overrideContext =>\n  createContext({ ...initialState, ...overrideContext })\n","import createContext from './create-context'\n\nconst initialState = {\n  config: {\n    name: 'caioalcantara',\n    title: 'caio alcantara',\n    subtitle: 'Software Engineer',\n    nav: [\n      {\n        text: 'Sobre mim',\n        path: '/#'\n      },\n      {\n        text: 'Projetos',\n        path: '/#'\n      },\n      {\n        text: 'Posts',\n        path: '/#'\n      },\n      {\n        text: 'Contato',\n        path: '/#'\n      },\n    ]\n  },\n  theme : {\n    fonts: {\n      default: 'Quicksand'\n    },\n    colors: {\n      main: '#243033',\n      gray: '#3D4A4D',\n      blue: '#00ACB4',\n      white: '#DAE6E6'\n    }\n  }\n}\n\nexport { createContext, initialState }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { renderRoutes } from 'react-router-config'\n\n// Routes\nimport routes from 'routes'\n\n// Services\nimport { serviceWorker } from 'services'\n\n// Store\nimport { createContext } from 'store'\n\nconst baseContext = createContext()\n\nReactDOM.render(\n    <BrowserRouter>\n      {renderRoutes(routes, {\n        Provider: baseContext.Provider,\n        Consumer: baseContext.Consumer,\n        baseContext: baseContext._currentValue\n      })}\n    </BrowserRouter>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}